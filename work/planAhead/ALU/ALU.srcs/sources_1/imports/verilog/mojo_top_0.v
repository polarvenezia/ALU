/*
   This file was generated automatically by the Mojo IDE version B1.3.4.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module mojo_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    input cclk,
    output reg spi_miso,
    input spi_ss,
    input spi_mosi,
    input spi_sck,
    output reg [3:0] spi_channel,
    input avr_tx,
    output reg avr_rx,
    input avr_rx_busy,
    output reg [23:0] io_led,
    output reg [7:0] io_seg,
    output reg [3:0] io_sel,
    input [4:0] io_button,
    input [23:0] io_dip
  );
  
  
  
  reg rst;
  
  wire [7-1:0] M_seg_segs;
  reg [4-1:0] M_seg_char;
  segments_1 seg (
    .char(M_seg_char),
    .segs(M_seg_segs)
  );
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_2 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [8-1:0] M_my_test_a_out;
  wire [8-1:0] M_my_test_b_out;
  wire [8-1:0] M_my_test_out;
  wire [6-1:0] M_my_test_alufn;
  test_case_3 my_test (
    .clk(clk),
    .rst(rst),
    .a_out(M_my_test_a_out),
    .b_out(M_my_test_b_out),
    .out(M_my_test_out),
    .alufn(M_my_test_alufn)
  );
  wire [4-1:0] M_ctr_value;
  counter_4 ctr (
    .clk(clk),
    .rst(rst),
    .value(M_ctr_value)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    led = 8'h00;
    spi_miso = 1'bz;
    spi_channel = 4'bzzzz;
    avr_rx = 1'bz;
    io_led = 24'h000000;
    io_seg = 8'hff;
    io_sel = 4'hf;
    io_led[8+7-:8] = M_my_test_a_out;
    io_led[0+7-:8] = M_my_test_b_out;
    io_led[16+7-:8] = M_my_test_out;
    M_seg_char = M_ctr_value;
    io_seg = ~M_seg_segs;
    io_sel = 4'he;
  end
endmodule
